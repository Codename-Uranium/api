openapi: 3.0.3

info:
  title: project-service
  version: '1.0'
  contact:
    email: support@vpnhouse.net
    name: Dmitry Efimov
  description: project-service API
paths:
  /api/project-service/project:
    get:
      parameters:
        - schema:
            type: integer
          name: limit
          in: query
          required: true
        - schema:
            type: integer
          name: offset
          in: query
          required: true
      summary: List projects
      tags:
        - list
        - project
      operationId: list-project
      description: Receive a full list of projects
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
    post:
      summary: Create project
      tags:
        - create
        - project
      operationId: create-project
      description: Create a new project
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectParams'
  /api/project-service/project/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
    get:
      summary: Get project
      tags:
        - get
        - project
      operationId: get-project
      description: Receive a specific project by id
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
    delete:
      summary: Delete a project
      tags:
        - delete
        - project
      operationId: delete-project
      description: Delete a specific project by id
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
    put:
      summary: Update project
      tags:
        - update
        - project
      operationId: update-project
      description: Update project
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectParams'
    patch:
      summary: Patch project
      tags:
        - patch
        - project
      operationId: patch-project
      description: Patch project
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchProjectParams'
  /api/project-service/location-mapping:
    get:
      summary: Get location mapping
      tags:
        - get
        - location-mapping
      operationId: get-location-mapping
      description: Receive a location mapping
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationMapping'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

  /api/project-service/auth-method:
    get:
      parameters:
        - schema:
            type: integer
          name: limit
          in: query
          required: true
        - schema:
            type: integer
          name: offset
          in: query
          required: true
      summary: List auth methods
      tags:
        - list
        - auth-method
      operationId: list-auth-method
      description: Receive full list of auth methods
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthMethod'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
    post:
      summary: Add auth method
      tags:
        - create
        - auth-method
      operationId: create-auth-method
      description: Create a new auth method
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthMethodParams'
  /api/project-service/auth-method/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
    get:
      summary: Get auth method
      tags:
        - get
        - auth-method
      operationId: get-auth-method
      description: Receive a specific auth method by id
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthMethod'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
    delete:
      summary: Delete a auth method
      tags:
        - delete
        - auth-method
      operationId: delete-auth-method
      description: Delete a specific auth method by id
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
    put:
      summary: Update auth method
      tags:
        - update
        - auth-method
      operationId: update-auth-method
      description: Update auth method
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthMethodParams'
    patch:
      summary: Patch auth method
      tags:
        - patch
        - auth-method
      operationId: patch-auth-method
      description: Patch auth method
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAuthMethodParams'
  /api/project-service/find-auth-method:
    get:
      summary: Find auth method
      tags:
        - find
        - auth-method
      operationId: find-auth-method
      description: Find auth method
      security:
        - ServiceKey: [ ]
        - ServiceName: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthMethod'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindAuthMethodParams'

components:
  schemas:
    Project:
      title: Project
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CreateProjectParams:
      title: CreateProjectParams
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: object
          nullable: true
      required:
        - name
        - description
    UpdateProjectParams:
      title: UpdateProjectParams
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: object
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
        - updated_at
    PatchProjectParams:
      title: PatchProjectParams
      type: object
      properties:
        name:
          type: string
        description:
          type: object
        updated_at:
          type: string
          format: date-time
          nullable: true
      required:
        - updated_at
    FindProjectParams:
      title: PatchProjectParams
      type: object
      properties:
        name:
          type: string
        description:
          type: object
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
    AuthMethod:
      title: AuthMethod
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
        project_id:
          type: string
          format: uuid
        settings:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CreateAuthMethodParams:
      title: CreateAuthMethodParams
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        project_id:
          type: string
          format: uuid
          nullable: true
        settings:
          type: object
      required:
        - name
        - type
        - project_id
    UpdateAuthMethodParams:
      title: UpdateAuthMethodParams
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        project_id:
          type: string
          format: uuid
          nullable: true
        settings:
          type: object
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - type
        - project_id
        - settings
        - updated_at
    PatchAuthMethodParams:
      title: PatchAuthMethodParams
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        project_id:
          type: string
          format: uuid
        settings:
          type: object
        updated_at:
          type: string
          format: date-time
          nullable: true
      required:
        - updated_at
    FindAuthMethodParams:
      title: FindAuthMethodParams
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        project_id:
          type: string
          format: uuid
        settings:
          type: object
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
    LocationMapping:
      title: LocationMapping
      type: object
      properties:
        mapping:
          type: object

  securitySchemes:
    ServiceKey:
      name: X-VPNHOUSE-SERVICE-KEY
      type: apiKey
      in: header
    ServiceName:
      name: X-VPNHOUSE-SERVICE
      type: apiKey
      in: header

tags:
  - name: get
  - name: list
  - name: add
  - name: delete
  - name: update
  - name: patch
  - name: backend
  - name: project
  - name: auth-method
  - name: location-mapping
