openapi: 3.0.3
info:
  title: AuthAPI
  version: '1.0'
  contact:
    name: Sergey Kovalev
    email: support@vpnhouse.net
  description: 'Authentication API  '
paths:
  /api/client/signin:
    post:
      summary: Authenticate user
      operationId: authenticate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResp'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Authenticate user and provide access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            examples: {}
      tags:
        - auth
        - client
      security:
        - bearer: []
        - basic: []
    parameters: []
  /api/client/signup:
    post:
      summary: Register user
      operationId: register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResp'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Register user and provide access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            examples: {}
      tags:
        - register
        - client
      security:
        - bearer: []
        - basic: []
    parameters: []
  /api/client/token:
    post:
      summary: Refresh access token
      operationId: token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResp'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Refresh access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
            examples: {}
      tags:
        - token
        - client
      security:
        - bearer: []
    parameters: []

  /api/service/signin:
    post:
      summary: Authenticate service
      operationId: service-authenticate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResp'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Authenticate service and provide access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthServiceRequest'
            examples: {}
      tags:
        - auth
        - service
      security:
        - ServiceKey: [ ]
    parameters: []
  /api/service/firebase-user:
    post:
      summary: Create user at firebase
      operationId: create-firebase-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Create user at firebase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirebaseUserRequest'
            examples: { }
      tags:
        - auth
        - service
      security:
        - ServiceKey: [ ]
    parameters: [ ]

  /api/client/send-restore-link:
    post:
      summary: Send restore link
      operationId: send-restore-link
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Send restore link to restore account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRestoreLinkRequest'
            examples: { }
      tags:
        - restore
    parameters: [ ]

  /api/client/send-confirmation-link:
    post:
      summary: Send confirmation link
      operationId: send-confirmation-link
      security:
        - bearer: [ ]
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Send confirmation link for email confirmation
      tags:
        - confirmation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
    parameters: [ ]

  /api/client/confirm:
    get:
      parameters:
        - schema:
            type: string
            format: uuid
          name: confirmation_id
          in: query
          required: true
        - schema:
            type: string
          name: platform_type
          in: query
          required: true
      summary: Confirm email
      operationId: confirm
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResp'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      description: Confirm email
      tags:
        - confirm
  /api/client/product:
    get:
      parameters:
        - schema:
            type: integer
          name: limit
          in: query
          required: true
        - schema:
            type: integer
          name: offset
          in: query
          required: true
      summary: List product
      tags:
        - list
        - product
      operationId: list-product
      description: Receive full list of products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

  /api/client/license-by-user:
    get:
      summary: List license by user_id
      tags:
        - list
        - license
      operationId: list-license-by-user
      description: List license by user_id
      security:
        - bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/License'
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

  /api/client/payment-details:
    post:
      summary: Get payment details
      tags:
        - get
        - payment-details
      operationId: payment-details
      description: Get payment details
      security:
        - {}
        - bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailsResp'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentDetailsRequest'

  /api/client/firebase-public-key:
    get:
      summary: Get firebase public key
      tags:
        - get
        - firebase
        - key
      operationId: get-firebase-public-key
      description: Get firebase public key
      security:
        - bearer: [ ]
      responses:
        '200':
          description: OK
        '400':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '401':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '403':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '409':
          $ref: 'common.yaml#/components/responses/ResponseError'
        '500':
          $ref: 'common.yaml#/components/responses/ResponseError'

components:
  schemas:
    AuthRequest:
      type: object
      title: AuthRequest
      x-examples:
        example-paid:
          value:
            project: 416d6d45-236b-4b39-a221-ed99abc7a4ff
            platform_type: windows
            client_version: 1.0.1
            device_id: f7df7c7a-3569-401c-b612-f49b775bb19e
            installation_id: f7df7c7a-3569-401c-b612-f49b775bb19e
            auth_type: 1744c06e-846b-4212-8154-118760bc9387
            auth_info: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        example-anonymus:
          value:
            project: 416d6d45-236b-4b39-a221-ed99abc7a4ff
            platform_type: windows
            client_version: 1.0.1
            device_id: f7df7c7a-3569-401c-b612-f49b775bb19e
            installation_id: f7df7c7a-3569-401c-b612-f49b775bb19e
            auth_type: 7e4cfc26-da82-4f04-aaa0-00d03f9de58f
            auth_info: d269c0c4-288e-44d5-b719-ffd9096aa6ff
      properties:
        project:
          type: string
          example: 416d6d45-236b-4b39-a221-ed99abc7a4ff
        platform_type:
          type: string
          example: android
        client_version:
          type: string
          example: 1.0.1
        device_id:
          type: string
          example: f7df7c7a-3569-401c-b612-f49b775bb19e
          format: uuid
        installation_id:
          type: string
          example: f7df7c7a-3569-401c-b612-f49b775bb19e
          format: uuid
        auth_type:
          type: string
          example: 1744c06e-846b-4212-8154-118760bc9387
        auth_info:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      required:
        - project
        - platform_type
        - client_version
        - device_id
        - installation_id
        - auth_type
        - auth_info
      writeOnly: true
    AuthServiceRequest:
      type: object
      title: AuthServiceRequest
      x-examples:
        example:
          value:
            project: 416d6d45-236b-4b39-a221-ed99abc7a4ff
            service_id: TestService
      properties:
        project:
          type: string
          example: 416d6d45-236b-4b39-a221-ed99abc7a4ff
        service_id:
          type: string
          example: TestService
      required:
        - project
        - service_id
      writeOnly: true
    AuthResp:
      title: AuthResp
      type: object
      x-examples:
        example-paid:
          value:
            access_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ2cG4tbm9kZSIsImV4cCI6MTYyNDk0OTk0NywianRpIjoiNTUxNzYyODQtZDdkZS0xMWViLWE2NDUtMDI0MmFjMTIwMDAyIiwiaWF0IjoxNjI0ODYzNTQ3LCJpc3MiOiJUZXN0UHJvamVjdC1BdXRoLTEtMiIsIm5iZiI6MTYyNDg2MzU0Nywic3ViIjoiRmVuZFZQTlRlc3RQcm9qZWN0L2ZpcmViYXNlL0pvaG5Eb2UifQ.REIfc3DB4e4pU7GyNU7vmJfsJBDu-0PLghV06KIdEM0Vhg4jVFA4MzgRU_j151PrAalSrpj0gLJGW8qZfqSLyDshRQCjgKYEt_X5PmNVkFmAjUz6hwCBJ8tMRxfhG2vcG1WZF80aTLLx6LQ0NwGT6hfAYEemzAecVwvnTuE1BQow3c1T71uZSByLDP1WAa0ZYnNZjceOGeikSXK5RtHogSyZkud7zfi_dKhDzW8Pgd_06HYEmexogv3LMpbJ0NY0nrRnxqPlJ1-uqQ6OIktQe1RvLe7BTGBthp_wrAv3Z9YdGSzJrlJhr1hg6qTzzdo0UHdvCpMeIun8bpr7OWVEIg
            refresh_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZWZyZXNoIiwiZXhwIjoxNjMwMTMzOTQ3LCJqdGkiOiI1NTE3NjI4NC1kN2RlLTExZWItYTY0NS0wMjQyYWMxMjAwMDIiLCJpYXQiOjE2MjQ4NjM1NDcsImlzcyI6IlRlc3RQcm9qZWN0LUF1dGgtMS0yIiwibmJmIjoxNjI0ODYzNTQ3LCJzdWIiOiJGZW5kVlBOVGVzdFByb2plY3QvZmlyZWJhc2UvSm9obkRvZSJ9.GbhbrSxLcoj7yJFQnh1Pq2_3OXMnffihRaRyOsHay8RLyZzwHTpHN_uEcT-5z7l_kbrcWWMuswChrnt6zYuzzMa_qPFXpSIwkf3xXrFOr4Og-wLQqsy6Uh7-hJB546mMt-bT7tCFXZbNRtCm_lzIW6mPAcIJtofJsqSPaFL-xWrJEl0m4vRNV4NusGwlCuE7uvjQPLUF5gS98QLLWNWyHipVWxjSEK57I0ngrsOU7b4jETHxtgYYQ_O2S5GoOUe0YrwYFkrKP1LB3eE_aAw-toOJSP6eVm_Y345MBVJj8NcGa3Kbdm5SzZhHs2P-ZoKc8Yp2FdiFPyCq6VDmQ2PyXw
            discovery_address:
              - 'https://discovery.project.io/api/client/locations'
        example-anonymous:
          value:
            access_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ2cG4tbm9kZSIsImV4cCI6MTYyNDk0OTk0NywianRpIjoiNTUxNzYyODQtZDdkZS0xMWViLWE2NDUtMDI0MmFjMTIwMDAyIiwiaWF0IjoxNjI0ODYzNTQ3LCJpc3MiOiJUZXN0UHJvamVjdC1BdXRoLTEtMiIsIm5iZiI6MTYyNDg2MzU0Nywic3ViIjoiRmVuZFZQTlRlc3RQcm9qZWN0L2Fub255bW91cy9kMjY5YzBjNC0yODhlLTQ0ZDUtYjcxOS1mZmQ5MDk2YWE2ZmYifQ.iTcsdx200Lv_tzqBjO5xdEQ6iPDQj0_Uqo-b1BdlcZGVPsXN_HmtAu-pKK5SrkYjGAsmnhF_4dxFeZnYmtYgsfbjDdqalejwsAJWWdYN1rPHoAncuLE4bgy7FKH-ugHlGaPVdlN1HT-ASdu4Z8aVVQOJSG66NmMmyW7YmmxfXD8VqMxoBZZneRu2PlVdRHxEIWmWihvSwdUW_rjw9nbIecidYftGI5FEivYkM9yR74iU3WeXG2zr_peqlfREuTGPCBb_bA2v45SVUS1f_gVEiokpRfYlX3W129DS0gpnz0fLddSFDwt2hNY8MyGKEnhwxPCBQNWgyJnqVo29J4rmhQ
            refresh_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZWZyZXNoIiwiZXhwIjoxNjMwMTMzOTQ3LCJqdGkiOiI1NTE3NjI4NC1kN2RlLTExZWItYTY0NS0wMjQyYWMxMjAwMDIiLCJpYXQiOjE2MjQ4NjM1NDcsImlzcyI6IlRlc3RQcm9qZWN0LUF1dGgtMS0yIiwibmJmIjoxNjI0ODYzNTQ3LCJzdWIiOiJGZW5kVlBOVGVzdFByb2plY3QvYW5vbnltb3VzL2QyNjljMGM0LTI4OGUtNDRkNS1iNzE5LWZmZDkwOTZhYTZmZiJ9.grtYMQCqGy7xDFnrJLYMYNJhCKNwTLhgab_bM6Kz12aNq9ZPBq44nB9YHI0pyj3OJ6eHCM9Ze5aBJh7LOyIQMLFS20g2YwBbGUEWO3rpuubQ5UE0o_fI8zRFNzkSkSbroR-xTgqQoteznfSH1I824K4FWgthGws-r8lwrix3ZjBVGzqzOAnnP6NtKg8nI3FMppSyas2fCBm92ojpE6EUkOK5KhwTXKIuwx9X7YebtDVLxyi1NfGpDESzCitvjTnvy65HCcvZNGnHT03VXdto-CtrkzM628FIljKR-RN_TbPjK-SXK5O52Z7u0jkEmtKrn4zzIjfXF1zGCMkPqxAjZw
            discovery_address:
              - 'https://discovery-free.project.io/api/client/locations'
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ2cG4tbm9kZSIsImV4cCI6MTYyNDk0OTk0NywianRpIjoiNTUxNzYyODQtZDdkZS0xMWViLWE2NDUtMDI0MmFjMTIwMDAyIiwiaWF0IjoxNjI0ODYzNTQ3LCJpc3MiOiJUZXN0UHJvamVjdC1BdXRoLTEtMiIsIm5iZiI6MTYyNDg2MzU0Nywic3ViIjoiRmVuZFZQTlRlc3RQcm9qZWN0L2ZpcmViYXNlL0pvaG5Eb2UifQ.REIfc3DB4e4pU7GyNU7vmJfsJBDu-0PLghV06KIdEM0Vhg4jVFA4MzgRU_j151PrAalSrpj0gLJGW8qZfqSLyDshRQCjgKYEt_X5PmNVkFmAjUz6hwCBJ8tMRxfhG2vcG1WZF80aTLLx6LQ0NwGT6hfAYEemzAecVwvnTuE1BQow3c1T71uZSByLDP1WAa0ZYnNZjceOGeikSXK5RtHogSyZkud7zfi_dKhDzW8Pgd_06HYEmexogv3LMpbJ0NY0nrRnxqPlJ1-uqQ6OIktQe1RvLe7BTGBthp_wrAv3Z9YdGSzJrlJhr1hg6qTzzdo0UHdvCpMeIun8bpr7OWVEIg
        refresh_token:
          type: string
          example: eyJhbGciOiJSUzI1NiIsImtpZCI6IjBmNmQwZGFiLWU0NzgtNGQ1Ni1hZGJhLTU5M2ZhYmE4ZTRhYiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZWZyZXNoIiwiZXhwIjoxNjMwMTMzOTQ3LCJqdGkiOiI1NTE3NjI4NC1kN2RlLTExZWItYTY0NS0wMjQyYWMxMjAwMDIiLCJpYXQiOjE2MjQ4NjM1NDcsImlzcyI6IlRlc3RQcm9qZWN0LUF1dGgtMS0yIiwibmJmIjoxNjI0ODYzNTQ3LCJzdWIiOiJGZW5kVlBOVGVzdFByb2plY3QvZmlyZWJhc2UvSm9obkRvZSJ9.GbhbrSxLcoj7yJFQnh1Pq2_3OXMnffihRaRyOsHay8RLyZzwHTpHN_uEcT-5z7l_kbrcWWMuswChrnt6zYuzzMa_qPFXpSIwkf3xXrFOr4Og-wLQqsy6Uh7-hJB546mMt-bT7tCFXZbNRtCm_lzIW6mPAcIJtofJsqSPaFL-xWrJEl0m4vRNV4NusGwlCuE7uvjQPLUF5gS98QLLWNWyHipVWxjSEK57I0ngrsOU7b4jETHxtgYYQ_O2S5GoOUe0YrwYFkrKP1LB3eE_aAw-toOJSP6eVm_Y345MBVJj8NcGa3Kbdm5SzZhHs2P-ZoKc8Yp2FdiFPyCq6VDmQ2PyXw
        discovery_addresses:
          type: array
          items:
            type: string
            format: uri
            example: 'https://discovery.project.io/api/client/locations'
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        entitlements:
          type: object
        email:
          type: string
      required:
        - access_token
    TokenRequest:
      title: TokenRequest
      type: object
      properties:
        installation_id:
          type: string
          format: uuid
        platform_type:
          type: string
        refresh_token:
          type: string
      required:
        - installation_id
        - platform_type
        - refresh_token
    TokenResp:
      title: TokenResp
      type: object
      properties:
        access_token:
          type: string
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        entitlements:
          type: object
        discovery_addresses:
          type: array
          items:
            type: string
            format: uri
      required:
        - access_token
        - created_at
        - expires_at
        - entitlements
    SendRestoreLinkRequest:
      title: SendRestoreLinkRequest
      type: object
      properties:
        email:
          type: string
        project_id:
          type: string
          format: uuid
      required:
        - email
        - project_id
    CreateFirebaseUserRequest:
      title: CreateFirebaseUserRequest
      type: object
      properties:
        project_id:
          type: string
          format: uuid
        email:
          type: string
        password:
          type: string
      required:
        - project_id
        - email
        - password
    User:
      title: User
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_id:
          type: string
          format: uuid
        email:
          type: string
        description:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Product:
      title: Product
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        license_type:
          type: string
        payment_json:
          type: object
        period:
          type: string
        selector_json:
          type: object
        entitlements_json:
          type: object
        disabled:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    License:
      title: License
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        disabled:
          type: boolean
        purchase_json:
          type: object
        selector_json:
          type: object
        entitlements_json:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PaymentDetailsRequest:
      title: PaymentDetailsRequest
      type: object
      properties:
        email:
          type: string
        project_id:
          type: string
          format: uuid
        product_id:
          type: string
          format: uuid
      required:
        - email
        - project_id
        - product_id
    PaymentDetailsResp:
      title: PaymentDetailsResp
      type: object
      properties:
        payment_url:
          type: string
      required:
        - payment_url

  securitySchemes:
    bearer:
      type: http
      scheme: bearer
    basic:
      type: http
      scheme: basic
    ServiceKey:
      name: X-VPNHOUSE-SERVICE-KEY
      type: apiKey
      in: header
tags:
  - name: auth
  - name: client
